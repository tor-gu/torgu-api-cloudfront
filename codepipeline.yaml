AWSTemplateFormatVersion : '2010-09-09'
Description: >
  This template deploys a CodePipeline to build and deploy the torgu-api-cloudfront template

Parameters:
  GitProviderType:
    Type: String
    Default: "GitHub"
  FullRepositoryId:
    Type: String
    Default: "tor-gu/torgu-api-cloudfront"
  MainGitBranch:
    Type: String
    Default: "dev"
  CloudfrontTemplate:
    Type: String
    Default: "torgu-api-cloudfront.yaml"
  Region:
    Type: String
    Default: "us-east-1"
  DeployStackName:
    Type: String
    Default: ""
  PipelineExecutionRole:
    Type: String
    Default: ""
  CloudFormationExecutionRole:
    Type: String
    Default: ""
  ArtifactBucket:
    Type: String
    Default: "aws-sam-cli-managed-prod-pipeline-artifactsbucket-lshck0q70sdj"
  CodeStarConnectionArn:
    Type: String
    Default: ""
  HostedZoneNameParam:
    Type: String
    Default: "tor-gu.com."
  DomainNameParam:
    Type: String
    Default: ""
  CertIdParam:
    Type: String
    Default: ""    
  LoggingBucketParam:
    Type: String
    Default: ""
  LoggingPrefixParam:
    Type: String
    Default: ""
  MunicipalitiesApiIdParam:
    Type: String
    Default: ""
  ElectionsApiIdParam:
    Type: String
    Default: ""


Conditions:
  CreateConnection: !Equals [!Ref CodeStarConnectionArn, ""]

Resources:
  #   ____
  # / ___|  ___  _   _ _ __ ___ ___
  # \___ \ / _ \| | | | '__/ __/ _ \
  #   ___) | (_) | |_| | | | (_|  __/
  # |____/ \___/ \__,_|_|  \___\___|
  CodeStarConnection:
    Condition: CreateConnection
    Type: AWS::CodeStarConnections::Connection
    Properties:
      ConnectionName: GitRepositoryConnection
      ProviderType: !Ref GitProviderType

  #  ____  _            _ _
  # |  _ \(_)_ __   ___| (_)_ __   ___
  # | |_) | | '_ \ / _ | | | '_ \ / _ \
  # |  __/| | |_) |  __| | | | | |  __/
  # |_|   |_| .__/ \___|_|_|_| |_|\___|
  #         |_|
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Ref PipelineArtifactsBucket
        Type: S3
      RoleArn: !GetAtt CodePipelineExecutionRole.Arn
      RestartExecutionOnUpdate: true
      Stages:
        - Name: Source
          Actions:
            - Name: SourceCodeRepo
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: "1"
              Configuration:
                ConnectionArn: !If [CreateConnection, !Ref CodeStarConnection, !Ref CodeStarConnectionArn]
                FullRepositoryId: !Ref FullRepositoryId
                BranchName: !Ref MainGitBranch
              OutputArtifacts:
                - Name: SourceCodeAsZip
              RunOrder: 1
        - Name: UpdatePipeline
          Actions:
            - Name: CreateChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                RoleArn: !GetAtt PipelineStackCloudFormationExecutionRole.Arn
                StackName: !Ref AWS::StackName
                ChangeSetName: !Sub ${AWS::StackName}-ChangeSet
                TemplatePath: SourceCodeAsZip::codepipeline.yaml
                Capabilities: CAPABILITY_NAMED_IAM
                ParameterOverrides: !Sub |
                  {
                    "CodeStarConnectionArn": "${CodeStarConnectionArn}",
                    "MainGitBranch": "${MainGitBranch}",
                    "PipelineExecutionRole": "${PipelineExecutionRole}",
                    "CloudFormationExecutionRole": "${CloudFormationExecutionRole}",
                    "DeployStackName": "${DeployStackName}",
                    "HostedZoneNameParam": "${HostedZoneNameParam}",
                    "DomainNameParam": "${DomainNameParam}",
                    "CertIdParam": "${CertIdParam}",
                    "LoggingBucketParam": "${LoggingBucketParam}",
                    "LoggingPrefixParam": "${LoggingPrefixParam}",
                    "MunicipalitiesApiIdParam": "${MunicipalitiesApiIdParam}",
                    "ElectionsApiIdParam": "${ElectionsApiIdParam}"
                  }
              InputArtifacts:
                - Name: SourceCodeAsZip
              RunOrder: 1
            - Name: ExecuteChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                RoleArn: !GetAtt PipelineStackCloudFormationExecutionRole.Arn
                StackName: !Ref AWS::StackName
                ChangeSetName: !Sub ${AWS::StackName}-ChangeSet
              OutputArtifacts:
                - Name: !Sub ${AWS::StackName}ChangeSet
              RunOrder: 2

        - Name: DeployProd
          Actions:
            - Name: DeployProd
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              RunOrder: 2 # keeping run order as 2 in case manual approval is enabled
              Configuration:
                ProjectName: !Ref CodeBuildProjectDeploy
              InputArtifacts:
                - Name: SourceCodeAsZip

  PipelineArtifactsBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      VersioningConfiguration:
        Status: Enabled
      LoggingConfiguration:
        DestinationBucketName:
          !Ref PipelineArtifactsLoggingBucket
        LogFilePrefix: "artifacts-logs"
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256

  PipelineArtifactsBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref PipelineArtifactsBucket
      PolicyDocument:
        Statement:
          - Effect: "Deny"
            Action: "s3:*"
            Principal: "*"
            Resource:
              - !Sub  "${PipelineArtifactsBucket.Arn}/*"
              - !GetAtt PipelineArtifactsBucket.Arn
            Condition:
              Bool:
                aws:SecureTransport: false
          - Action:
              - s3:*
            Effect: Allow
            Resource:
              - !Sub arn:${AWS::Partition}:s3:::${PipelineArtifactsBucket}
              - !Sub arn:${AWS::Partition}:s3:::${PipelineArtifactsBucket}/*
            Principal:
              AWS:
                - !GetAtt CodePipelineExecutionRole.Arn

  PipelineArtifactsLoggingBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      AccessControl: "LogDeliveryWrite"
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256

  PipelineArtifactsLoggingBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref PipelineArtifactsLoggingBucket
      PolicyDocument:
        Statement:
          - Effect: "Deny"
            Action: "s3:*"
            Principal: "*"
            Resource:
              - !Sub "${PipelineArtifactsLoggingBucket.Arn}/*"
              - !GetAtt PipelineArtifactsLoggingBucket.Arn
            Condition:
              Bool:
                aws:SecureTransport: false

  CodePipelineExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
              - "sts:AssumeRole"
            Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
      Policies:
        - PolicyName: CodePipelineAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "iam:PassRole"
                Resource: "*"
        - PolicyName: CodeStarConnectionAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "codestar-connections:UseConnection"
                Resource: !If [CreateConnection, !Ref CodeStarConnection, !Ref CodeStarConnectionArn]
        - PolicyName: CodePipelineCodeAndS3Bucket
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Action:
                  - s3:GetBucketAcl
                  - s3:GetBucketLocation
                Effect: Allow
                Resource:
                  Fn::GetAtt:
                    - PipelineArtifactsBucket
                    - Arn
              - Action:
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:PutObject"
                Effect: Allow
                Resource:
                  Fn::Sub: ${PipelineArtifactsBucket.Arn}/*

        - PolicyName: CodePipelineCodeBuildAndCloudformationAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "codebuild:StartBuild"
                  - "codebuild:BatchGetBuilds"
                Resource:
                  - !GetAtt CodeBuildProjectDeploy.Arn
              - Effect: Allow
                Action:
                  - "cloudformation:CreateStack"
                  - "cloudformation:DescribeStacks"
                  - "cloudformation:DeleteStack"
                  - "cloudformation:UpdateStack"
                  - "cloudformation:CreateChangeSet"
                  - "cloudformation:ExecuteChangeSet"
                  - "cloudformation:DeleteChangeSet"
                  - "cloudformation:DescribeChangeSet"
                  - "cloudformation:SetStackPolicy"
                  - "cloudformation:SetStackPolicy"
                  - "cloudformation:ValidateTemplate"
                Resource:
                  - !Sub "arn:${AWS::Partition}:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/${AWS::StackName}/*"

  # PipelineStackCloudFormationExecutionRole is used for the pipeline to self mutate
  PipelineStackCloudFormationExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Action: "sts:AssumeRole"
          Effect: Allow
          Principal:
            Service: cloudformation.amazonaws.com
      Policies:
        - PolicyName: GrantCloudFormationFullAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: '*'
                Resource: '*'

  #   ____          _      ____        _ _     _
  #  / ___|___   __| | ___| __ ) _   _(_| | __| |
  # | |   / _ \ / _` |/ _ |  _ \| | | | | |/ _` |
  # | |__| (_) | (_| |  __| |_) | |_| | | | (_| |
  #  \____\___/ \__,_|\___|____/ \__,_|_|_|\__,_|
  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Tags:
        - Key: Role
          Value: aws-sam-pipeline-codebuild-service-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
              - "sts:AssumeRole"
            Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
      Policies:
        - PolicyName: CodeBuildLogs
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource:
                  - !Sub "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*"
        - PolicyName: CodeBuildArtifactsBucket
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:PutObject"
                Resource:
                  - !Sub "arn:${AWS::Partition}:s3:::${PipelineArtifactsBucket}/*"
        - PolicyName: AssumeStagePipExecutionRoles
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Action:
                  - sts:AssumeRole
                Effect: Allow
                Resource: "*"
                Condition:
                  StringEquals:
                    aws:ResourceTag/Role: pipeline-execution-role

  CodeBuildProjectDeploy:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:5.0
        EnvironmentVariables:
          - Name: ENV_TEMPLATE
            Value: torgu-api-cloudfront.yaml
          - Name: ENV_REGION
            Value: !Ref Region
          - Name: ENV_STACK_NAME
            Value: !Ref DeployStackName
          - Name: ENV_PIPELINE_EXECUTION_ROLE
            Value: !Ref PipelineExecutionRole
          - Name: ENV_CLOUDFORMATION_EXECUTION_ROLE
            Value: !Ref CloudFormationExecutionRole
          - Name: ENV_BUCKET
            Value: !Ref ArtifactBucket
          - Name: ENV_HOSTED_ZONE_NAME
            Value: !Ref HostedZoneNameParam
          - Name: ENV_DOMAIN_NAME
            Value: !Ref DomainNameParam
          - Name: ENV_CERT_ID
            Value: !Ref CertIdParam
          - Name: ENV_LOGGING_BUCKET
            Value: !Ref LoggingBucketParam
          - Name: ENV_LOGGING_PREFIX
            Value: !Ref LoggingPrefixParam
          - Name: ENV_MUNICIPALITIES_API_ID
            Value: !Ref MunicipalitiesApiIdParam
          - Name: ENV_ELECTIONS_API_ID
            Value: !Ref ElectionsApiIdParam
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec: pipeline/buildspec_deploy.yaml
Outputs:
  CodeStarConnectionArn:
    Condition: CreateConnection
    Description: The Arn of AWS CodeStar Connection used to connect to external code repositories.
    Value: !Ref CodeStarConnection
  MainGitBranch:
    Description: Git repository branch
    Value: !Ref MainGitBranch
  PipelineExecutionRole:
    Description: Execution role for pipeline
    Value: !Ref PipelineExecutionRole
  CloudFormationExecutionRole:
    Description: Execution role for cloudformation
    Value: !Ref CloudFormationExecutionRole
  ArtifactBucket:
    Description: S3 bucket name for code build artifacts
    Value: !Ref ArtifactBucket
  DeployStackName:
    Description: The name of the stack we are deploying
    Value: !Ref DeployStackName
  HostedZoneNameParam:
    Value: !Ref HostedZoneNameParam
  DomainNameParam:
    Value: !Ref DomainNameParam
  CertIdParam:
    Value: !Ref CertIdParam
  LoggingBucketParam:
    Value: !Ref LoggingBucketParam
  LoggingPrefixParam:
    Value: !Ref LoggingPrefixParam
  MunicipalitiesApiIdParam:
    Value: !Ref MunicipalitiesApiIdParam
  ElectionsApiIdParam:
    Value: !Ref ElectionsApiIdParam
